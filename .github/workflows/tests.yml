name: Run Tests On File Changes

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build test image
        run: |
          docker compose -f docker/docker-compose.dev.yml build test-specific

      - name: Debug environment
        run: |
          docker compose -f docker/docker-compose.dev.yml run --rm -v ${{ github.workspace }}:/app test-specific /bin/sh -c "
            echo '=== Current working directory ===' && 
            pwd &&
            echo '\n=== Contents of /app ===' &&
            ls -la /app &&
            echo '\n=== Contents of /app/backend ===' &&
            ls -la /app/backend &&
            echo '\n=== Contents of /app/backend/backend ===' &&
            ls -la /app/backend/backend 2>/dev/null || echo 'Directory not found' &&
            echo '\n=== Contents of /app/backend/docs_gen ===' &&
            ls -la /app/backend/docs_gen 2>/dev/null || echo 'Directory not found' &&
            echo '\n=== Find all __init__.py files ===' &&
            find /app -name '__init__.py' &&
            echo '\n=== Python sys.path ===' &&
            PYTHONPATH=/app python -c 'import sys; print(\"\n\".join(sys.path))' &&
            echo '\n=== Try importing backend ===' &&
            PYTHONPATH=/app python -c 'import backend; print(\"backend imported successfully\")' 2>&1 || echo 'Failed to import backend'"

      - name: Run HTML Converter tests
        run: |
          docker compose -f docker/docker-compose.dev.yml run --rm -e PYTHONPATH=/app -v ${{ github.workspace }}:/app test-specific python -m unittest tests.backend.docs_gen.test_html_converter

      - name: Run PDF/A Service tests
        run: |
          docker compose -f docker/docker-compose.dev.yml run --rm -e PYTHONPATH=/app -v ${{ github.workspace }}:/app test-specific python -m unittest tests.backend.docs_gen.test_pdfa_service

      - name: Run Number Formatting tests
        run: |
          docker compose -f docker/docker-compose.dev.yml run --rm -e PYTHONPATH=/app -v ${{ github.workspace }}:/app test-specific python -m unittest tests.backend.utils.test_number_and_dates

      - name: Run Utils tests
        run: |
          docker compose -f docker/docker-compose.dev.yml run --rm -e PYTHONPATH=/app -v ${{ github.workspace }}:/app test-specific python -m unittest tests.backend.utils.test_utils

      - name: Cleanup test directories
        run: |
          docker compose -f docker/docker-compose.dev.yml run --rm test-specific sh -c "rm -rf /app/test_outputs /app/outputs"

  ##build-prod:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
      
  #    - name: Set up Docker Buildx
  #      uses: docker/setup-buildx-action@v2
      
  #  - name: Build production image
  #    run: |
  #      docker compose -f docker/docker-compose.yml build
